#!/usr/bin/env python
# _*_ coding: utf-8 _*-
# @Time     : 2022/7/4 15:44
# @Author   : yangshukun
# @File     : case_bsgl_1104.py

from baseOperation.init_cls import *
from pageKeyword.keyword_bsgl_common import *
from pageKeyword.keyword_bsgl_rptc import *
from utils.operationXml import *
import sys
from data.data_class.common_data import *
from Common.OtherFunc import *


class BsglRptcTest(InitCls, BsglMainKeyword, OperationXml, BsglPubBsrwKeyword, BsglPubBsfwKeyword,
                   BsglPubFzglKeyword, BsglPubBssqKeyword, BsglPubSjsqKeyword, BsglPubSplcKeyword,
                   BsglPubBbmbKeyword, BsglRptcBscsKeyword, BsglBsplData, BsglPubBsnrsqKeyword,
                   BsglPubHswhKeyword, BsglPubSjxwhKeyword, ZdysjlxPubSplcKeyword):

    def test_01_import_module_success(self):
        """综合报表报表模板导入成功"""
        mylog.info('\n************开始执行案例：【{}】************'.format(sys._getframe().f_code.co_name))
        # 1、登录(已在Init类中进行了登录，无需在案例中再次进行登录)
        # 2、进入报送管理主界面
        self.intoBsglMainMenu()
        # 3、选择综合报表品种进入综合报表管理界面
        self.switchToBsglBaseFrame()
        self.intoRptcTab()
        # 4、切换到品种管理frame
        self.switchBspzFrame()
        # 5、进入报表模板管理页签
        self.swithToBbmb()
        # 6、导入模板
        self.switchBspzFrame()
        self.importBbmb(self.RPTC_PATH)
        self.GotoSleep(1)
        # 断言导入成功
        res = self.GetTagText(self.MSG_IMPORT_RESULT)
        self.assertEqual(res, '成功')
        mylog.info('\n************案例：【{}】执行结束************'.format(sys._getframe().f_code.co_name))

    def test_02_export_module_success(self):
        """综合报表报表模板导出成功"""
        mylog.info('\n************开始执行案例：【{}】************'.format(sys._getframe().f_code.co_name))
        # 1、登录(已在Init类中进行了登录，无需在案例中再次进行登录)
        # 2、进入报送管理主界面
        self.intoBsglMainMenu()
        # 3、选择综合报表品种进入综合报表管理界面
        self.switchToBsglBaseFrame()
        self.intoRptcTab()
        # 4、切换到品种管理frame
        self.switchBspzFrame()
        # 5、进入报表模板管理页签
        self.swithToBbmb()
        # 6、导出模板
        self.switchBspzFrame()
        self.inputBsnrbh("T115")
        self.refreshBbmbPage()
        self.clickCheckBox(1)
        self.exportBbmb()
        self.GotoSleep(1)
        mylog.info('\n************案例：【{}】执行结束************'.format(sys._getframe().f_code.co_name))

    def test_03_add_bsrw_rptc_success(self):
        """综合报表报送任务新增报送任务并废弃成功"""
        mylog.info('\n************开始执行案例：【{}】************'.format(sys._getframe().f_code.co_name))
        # 1、登录(已在Init类中进行了登录，无需在案例中再次进行登录)
        # 2、进入报送管理主界面
        self.intoBsglMainMenu()
        self.switchToBsglBaseFrame()
        # 3、选择综合报表品种进入综合报表管理界面
        self.intoRptcTab()
        # 4、切换到品种管理frame
        self.switchBspzFrame()
        # 5、进入报送任务管理页签
        self.swithToBsrw()
        # 6、新增报送任务
        self.switchBspzFrame()
        self.addBsrw("T115", "2021")
        self.BbpzChoiceMould()
        self.addBsrwSave()
        # 7、断言新增成功
        self.GotoSleep(1)
        res = self.GetTagText(self.MSG_ADD_RESULT)
        self.assertEqual(res, "保存成功")
        self.closeXzrw_success()
        # 废弃报送任务
        self.switchToBsglBaseFrame()
        self.switchBspzFrame()
        self.switchBspzFrame()
        self.queryBsrw("2021年上半年", "T115-绿色融资统计表")
        self.abandonBsrw("综合报表任务自动化废弃")
        mylog.info('\n************案例：【{}】执行结束************'.format(sys._getframe().f_code.co_name))

    def test_04_rptc_bsfw_success(self):
        """综合报表报送范围点击是否报送成功"""
        mylog.info('\n************开始执行案例：【{}】************'.format(sys._getframe().f_code.co_name))
        # 1、登录(已在Init类中进行了登录，无需在案例中再次进行登录)
        # 2、进入报送管理主界面
        self.intoBsglMainMenu()
        self.switchToBsglBaseFrame()
        # 3、选择综合报表品种进入综合报表管理界面
        self.intoRptcTab()
        # 4、切换到品种管理frame
        self.switchBspzFrame()
        # 5、进入报送范围管理页签
        self.swithToBsfw()
        # 6、查询并点击是否报送按钮
        self.bsglMainFrame()
        self.queryBsnr("按半年", "T115-绿色融资统计表")
        self.whetherBsnr()
        # 断言点击是否报送成功
        res = self.GetTagText(self.MSG_SFBS_RESULT)
        self.assertEqual(res, '设置成功')
        self.clickOkAlert()
        # 6、查询并点击是否报送按钮(是)
        self.whetherBsnr()
        # 断言点击是否报送成功
        res = self.GetTagText(self.MSG_SFBS_RESULT)
        self.assertEqual(res, '设置成功')
        mylog.info('\n************案例：【{}】执行结束************'.format(sys._getframe().f_code.co_name))

    def test_05_change_rptc_bsfw_success(self):
        """综合报表报送范围修改单个报送内容设置成功"""
        mylog.info('\n************开始执行案例：【{}】************'.format(sys._getframe().f_code.co_name))
        # 1、登录(已在Init类中进行了登录，无需在案例中再次进行登录)
        # 2、进入报送管理主界面
        self.intoBsglMainMenu()
        self.switchToBsglBaseFrame()
        # 3、选择综合报表品种进入综合报表管理界面
        self.intoRptcTab()
        # 4、切换到品种管理frame
        self.switchBspzFrame()
        # 5、进入报送范围管理页签
        self.swithToBsfw()
        # 6、查询并修改单个报送内容设置
        self.bsglMainFrame()
        self.checkOneBsnr()
        self.changeBsnr("上期", "0 45 /1 * * ?", "15", "天", "是", "是")
        mylog.info('\n************案例：【{}】执行结束************'.format(sys._getframe().f_code.co_name))

    def test_06_change_bscs_success(self):
        """综合报表报送参数修改参数配置成功"""
        mylog.info('\n************开始执行案例：【{}】************'.format(sys._getframe().f_code.co_name))
        # 1、登录(已在Init类中进行了登录，无需在案例中再次进行登录)
        # 2、进入报送管理主界面
        self.intoBsglMainMenu()
        self.switchToBsglBaseFrame()
        # 3、选择综合报表品种进入综合报表管理界面
        self.intoRptcTab()
        # 4、切换到品种管理frame
        self.switchBspzFrame()
        # 5、进入报送范围管理页签
        self.swithToBscs()
        # 6、修改报送参数配置信息
        self.bsglMainFrame()
        self.changeRptcBscsSbsp()
        self.changeRptcBscsSave()
        # 断言修改参数配置成功
        # res = self.GetTagText(self.MSG_ADD_RESULT)
        # self.assertEqual(res, '保存成功!')
        mylog.info('\n************案例：【{}】执行结束************'.format(sys._getframe().f_code.co_name))

    def test_07_add_edit_del_group_rptc_success(self):
        """综合报表分组管理--新增分组，编辑，删除，成功"""
        mylog.info('\n************开始执行案例：【{}】************'.format(sys._getframe().f_code.co_name))
        # 1、登录(已在Init类中进行了登录，无需在案例中再次进行登录)
        # 2、进入报送管理主界面
        self.intoBsglMainMenu()
        self.switchToBsglBaseFrame()
        # 3、选择综合报表品种进入综合报表管理界面
        self.intoRptcTab()
        # 4、切换到品种管理frame
        self.switchBspzFrame()
        # 5、进入报送范围管理页签
        self.swithToFzgl()
        # 6、新增分组并断言成功
        self.bsglMainFrame()
        self.addGroup("综合报表自动化分组", "征信权限1", "自动化测试_综合报表分组描述")
        res = self.GetTagText(self.MSG_GROUP_SAVE)
        self.assertEqual(res, "保存成功！")
        self.closeGroupSaveAlert()
        # 7、编辑分组并断言修改成功
        self.editeGroup("综合报表自动化分组", "综合报表自动化分组_修改", "自动化测试_综合报表分组描述_修改")
        res = self.GetTagText(self.MSG_GROUP_SAVE)
        self.assertEqual(res, "保存成功！")
        self.closeGroupSaveAlert()
        # 8查询修改后的名称正确
        self.searchGroupName("综合报表自动化分组_修改")
        self.refreshGroupPage()
        res = self.GetTagText(self.DATA_FIRST_GROUP.format(1))
        self.assertEqual(res, "综合报表自动化分组_修改")
        # 删除分组
        self.delGroup("综合报表自动化分组_修改")
        mylog.info('\n************案例：【{}】执行结束************'.format(sys._getframe().f_code.co_name))

    def test_08_bssq_success(self):
        """综合报表报送授权成功"""
        mylog.info('\n************开始执行案例：【{}】************'.format(sys._getframe().f_code.co_name))
        # 1、登录(已在Init类中进行了登录，无需在案例中再次进行登录)
        # 2、进入报送管理主界面
        self.intoBsglMainMenu()
        self.switchToBsglBaseFrame()
        # 3、选择综合报表品种进入综合报表管理界面
        self.intoRptcTab()
        # 4、切换到品种管理frame
        self.switchBspzFrame()
        # 5、进入分组管理，新增一个分组
        self.swithToFzgl()
        self.bsglMainFrame()
        self.addGroup("综合报表自动化授权分组", "征信权限2", "自动化测试_综合报表授权分组描述")
        res = self.GetTagText(self.MSG_GROUP_SAVE)
        self.assertEqual(res, "保存成功！")
        self.closeGroupSaveAlert()
        # 6、进入报送授权页面
        self.SwitchFatherFrame()
        self.swithToBssq()
        self.bsglMainFrame()
        # 7、选择分组
        self.searchGroupNameBssq("综合报表自动化授权分组")
        self.searchBsnr("T115-绿色融资统计表")
        self.refreshBssqPage()
        # 8、勾选核对权限，上报权限，查询，重抽权限
        self.tickHdqx()
        self.tickSbqx()
        self.tickCxqx()
        self.tickCcqx()
        self.saveBssq()
        res = self.GetTagText(self.MSG_SAVE_BSSQ)
        self.assertEqual(res, "保存成功")
        # 9、进入分组管理
        self.SwitchFatherFrame()
        self.swithToFzgl()
        self.bsglMainFrame()
        # 10、删除分组
        self.delGroup("综合报表自动化授权分组")
        mylog.info('\n************案例：【{}】执行结束************'.format(sys._getframe().f_code.co_name))

    def test_09_splc_batch_update_success(self):
        """综合报表审批流程批量修改成功"""
        mylog.info('\n************开始执行案例：【{}】************'.format(sys._getframe().f_code.co_name))
        # 1、登录(已在Init类中进行了登录，无需在案例中再次进行登录)
        # 2、进入报送管理主界面
        self.intoBsglMainMenu()
        self.switchToBsglBaseFrame()
        # 3、选择综合报表品种进入综合报表管理界面
        self.intoRptcTab()
        # 4、切换到品种管理frame
        self.switchBspzFrame()
        # 5、进入分组管理，新增一个分组
        self.swithToFzgl()
        self.bsglMainFrame()
        self.addGroup("综合报表自动化授权分组", "征信权限2", "自动化测试_综合报表授权分组描述")
        res = self.GetTagText(self.MSG_GROUP_SAVE)
        self.assertEqual(res, "保存成功！")
        self.closeGroupSaveAlert()
        # 6、进入报送授权页面
        self.SwitchFatherFrame()
        self.swithToBssq()
        self.bsglMainFrame()
        # 7、选择分组
        self.searchGroupNameBssq("综合报表自动化授权分组")
        self.searchBsnr("T115-绿色融资统计表")
        self.refreshBssqPage()
        # 8、勾选核对权限，上报权限，查询，重抽权限
        self.tickHdqx()
        self.saveBssq()
        res = self.GetTagText(self.MSG_SAVE_BSSQ)
        self.assertEqual(res, "保存成功")
        # 9、进入审批流程页面
        self.SwitchFatherFrame()
        self.swithToSplc()
        self.bsglMainFrame()
        # 10、选择分组
        self.searchGroupNameSplc("综合报表自动化授权分组")
        self.refreshSplcPage()
        # 11、勾选报送内容，批量修改,并断言修改成功
        self.tickBoxAll()
        self.batchUpdateSplc("综合报表审批")
        self.switchToBsglBaseFrame()
        self.bsglMainFrame()
        self.bsglMainFrame()
        res = self.GetTagText(self.MSG_BATCH_ALERT_SPLC)
        self.assertEqual(res, "保存成功")
        self.closeBatchAlertSplc()
        # 进入分组管理
        self.switchToBsglBaseFrame()
        self.bsglMainFrame()
        self.swithToFzgl()
        self.bsglMainFrame()
        # 删除分组
        self.delGroup("综合报表自动化授权分组")
        mylog.info('\n************案例：【{}】执行结束************'.format(sys._getframe().f_code.co_name))

    def test_10_rptc_bsnrsq_edit_all_success(self):
        """综合报表报送内容授权--编辑全部成功"""
        mylog.info('\n************开始执行案例：【{}】************'.format(sys._getframe().f_code.co_name))
        # 1、登录(已在Init类中进行了登录，无需在案例中再次进行登录)
        # 2、进入报送管理主界面
        self.intoBsglMainMenu()
        self.switchToBsglBaseFrame()
        # 3、选择综合报表品种进入综合报表管理界面
        self.intoRptcTab()
        # 4、切换到品种管理frame
        self.switchBspzFrame()
        # 5、进入分组管理，新增一个分组
        self.swithToFzgl()
        self.bsglMainFrame()
        group_name = "综合报表分组" + get_now_time_to_str()
        self.addGroup(group_name, "征信权限2", "自动化测试_综合报表授权分组描述")
        res = self.GetTagText(self.MSG_GROUP_SAVE)
        self.assertEqual(res, "保存成功！")
        self.closeGroupSaveAlert()
        # 6、进入报送授权页面
        self.SwitchFatherFrame()
        self.swithToBssq()
        self.bsglMainFrame()
        # 7、选择分组
        self.searchGroupNameBssq(group_name)
        self.searchBsnr("T115-绿色融资统计表")
        self.refreshBssqPage()
        # 8、勾选核对权限
        self.tickHdqx()
        self.saveBssq()
        res = self.GetTagText(self.MSG_SAVE_BSSQ)
        self.assertEqual(res, "保存成功")
        # 9、进入报送内容授权页面
        self.SwitchFatherFrame()
        self.swithToBsnrsq()
        self.bsglMainFrame()
        # 10、选择分组
        self.searchGroupNameSplc(group_name)
        # 11、输入报送内容，点击刷新
        self.searchBsnrBsnrsq("T115-绿色融资统计表")
        self.clickRefreshBsnrsq()
        self.choiceBoxByNameBsnrsq("T115-绿色融资统计表")
        # 12、点击编辑全部，进行授权
        self.clickEditAllBsnrsq()
        self.AlertAccept()
        # 13、断言编辑全部授权后，检查编辑权限项不为0
        res = self.GetTagText(self.BUTTON_EDIT_COUNT_BSNRSQ.format("T115-绿色融资统计表", 1)).split("(")[1].split(")")[
            0]
        self.assertGreater(int(res), 0)
        # 14、进入分组管理
        self.switchToBsglBaseFrame()
        self.bsglMainFrame()
        self.swithToFzgl()
        self.bsglMainFrame()
        # 15、删除分组
        self.delGroup(group_name)
        mylog.info('\n************案例：【{}】执行结束************'.format(sys._getframe().f_code.co_name))

    def test_11_rptc_bsnrsq_trace_all_success(self):
        """综合报表报送内容授权--追溯全部成功"""
        mylog.info('\n************开始执行案例：【{}】************'.format(sys._getframe().f_code.co_name))
        # 1、登录(已在Init类中进行了登录，无需在案例中再次进行登录)
        # 2、进入报送管理主界面
        self.intoBsglMainMenu()
        self.switchToBsglBaseFrame()
        # 3、选择综合报表品种进入综合报表管理界面
        self.intoRptcTab()
        # 4、切换到品种管理frame
        self.switchBspzFrame()
        # 5、进入分组管理，新增一个分组
        self.swithToFzgl()
        self.bsglMainFrame()
        group_name = "综合报表分组" + get_now_time_to_str()
        self.addGroup(group_name, "征信权限2", "自动化测试_综合报表授权分组描述")
        res = self.GetTagText(self.MSG_GROUP_SAVE)
        self.assertEqual(res, "保存成功！")
        self.closeGroupSaveAlert()
        # 6、进入报送授权页面
        self.SwitchFatherFrame()
        self.swithToBssq()
        self.bsglMainFrame()
        # 7、选择分组
        self.searchGroupNameBssq(group_name)
        self.searchBsnr("T115-绿色融资统计表")
        self.refreshBssqPage()
        # 8、勾选核对权限
        self.tickHdqx()
        self.saveBssq()
        res = self.GetTagText(self.MSG_SAVE_BSSQ)
        self.assertEqual(res, "保存成功")
        # 9、进入报送内容授权页面
        self.SwitchFatherFrame()
        self.swithToBsnrsq()
        self.bsglMainFrame()
        # 10、选择分组
        self.searchGroupNameSplc(group_name)
        # 11、输入报送内容，点击刷新
        self.searchBsnrBsnrsq("T115-绿色融资统计表")
        self.clickRefreshBsnrsq()
        self.choiceBoxByNameBsnrsq("T115-绿色融资统计表")
        # 12、点击追溯全部，进行授权
        self.clickTraceAllBsnrsq()
        self.AlertAccept()
        # 13、断言追溯全部授权后，检查追溯权限项不为0
        res = self.GetTagText(self.BUTTON_EDIT_COUNT_BSNRSQ.format("T115-绿色融资统计表", 2)).split("(")[1].split(")")[
            0]
        self.assertGreater(int(res), 0)
        # 14、进入分组管理
        self.switchToBsglBaseFrame()
        self.bsglMainFrame()
        self.swithToFzgl()
        self.bsglMainFrame()
        # 15、删除分组
        self.delGroup(group_name)
        mylog.info('\n************案例：【{}】执行结束************'.format(sys._getframe().f_code.co_name))

    def test_12_rptc_bsnrsq_cancel_all_success(self):
        """综合报表报送内容授权--取消全部授权成功"""
        mylog.info('\n************开始执行案例：【{}】************'.format(sys._getframe().f_code.co_name))
        # 1、登录(已在Init类中进行了登录，无需在案例中再次进行登录)
        # 2、进入报送管理主界面
        self.intoBsglMainMenu()
        self.switchToBsglBaseFrame()
        # 3、选择综合报表品种进入综合报表管理界面
        self.intoRptcTab()
        # 4、切换到品种管理frame
        self.switchBspzFrame()
        # 5、进入分组管理，新增一个分组
        self.swithToFzgl()
        self.bsglMainFrame()
        group_name = "综合报表分组" + get_now_time_to_str()
        self.addGroup(group_name, "征信权限2", "自动化测试_综合报表授权分组描述")
        res = self.GetTagText(self.MSG_GROUP_SAVE)
        self.assertEqual(res, "保存成功！")
        self.closeGroupSaveAlert()
        # 6、进入报送授权页面
        self.SwitchFatherFrame()
        self.swithToBssq()
        self.bsglMainFrame()
        # 7、选择分组
        self.searchGroupNameBssq(group_name)
        self.searchBsnr("T115-绿色融资统计表")
        self.refreshBssqPage()
        # 8、勾选核对权限
        self.tickHdqx()
        self.saveBssq()
        res = self.GetTagText(self.MSG_SAVE_BSSQ)
        self.assertEqual(res, "保存成功")
        # 9、进入报送内容授权页面
        self.SwitchFatherFrame()
        self.swithToBsnrsq()
        self.bsglMainFrame()
        # 10、选择分组
        self.searchGroupNameSplc(group_name)
        # 11、输入报送内容，点击刷新
        self.searchBsnrBsnrsq("T115-绿色融资统计表")
        self.clickRefreshBsnrsq()
        self.choiceBoxByNameBsnrsq("T115-绿色融资统计表")
        # 12、点击追溯全部，进行授权
        self.clickTraceAllBsnrsq()
        self.AlertAccept()
        # 13、断言追溯全部授权后，检查追溯权限项不为0
        res = self.GetTagText(self.BUTTON_EDIT_COUNT_BSNRSQ.format("T115-绿色融资统计表", 2)).split("(")[1].split(")")[
            0]
        self.assertGreater(int(res), 0)
        # 14、取消所有授权，断言取消授权后权限项为0
        self.choiceBoxByNameBsnrsq("T115-绿色融资统计表")
        self.clickCancelAllBsnrsq()
        self.AlertAccept()
        res1 = self.GetTagText(self.BUTTON_EDIT_COUNT_BSNRSQ.format("T115-绿色融资统计表", 2)).split("(")[1].split(")")[
            0]
        self.assertEqual(int(res1), 0)
        res2 = self.GetTagText(self.BUTTON_EDIT_COUNT_BSNRSQ.format("T115-绿色融资统计表", 1)).split("(")[1].split(")")[
            0]
        self.assertEqual(int(res2), 0)
        # 14、进入分组管理
        self.switchToBsglBaseFrame()
        self.bsglMainFrame()
        self.swithToFzgl()
        self.bsglMainFrame()
        # 15、删除分组
        self.delGroup(group_name)
        mylog.info('\n************案例：【{}】执行结束************'.format(sys._getframe().f_code.co_name))

    def test_13_rptc_hswh_add_function_success(self):
        """综合报表函数维护--新增函数成功"""
        mylog.info('\n************开始执行案例：【{}】************'.format(sys._getframe().f_code.co_name))
        # 1、登录(已在Init类中进行了登录，无需在案例中再次进行登录)
        # 2、进入报送管理主界面
        self.intoBsglMainMenu()
        self.switchToBsglBaseFrame()
        # 3、选择人行报表品种进入rptc管理界面
        self.intoRptcTab()
        # 4、切换到品种管理frame
        self.switchBspzFrame()
        # 5、进入函数维护页面，点击新增进入新增页面
        self.swithToHswh()
        self.bsglMainFrame()
        self.addHswhMainPage()
        self.switchToDetailFrame()
        # 6、输入函数基础信息
        hsmc = "rptc自动化测试函数" + get_now_time_to_str()
        self.inputHsmcHswhDetailPage(hsmc)
        self.inputHslbHswhDetailPage(self.HSLB_DKYE)
        self.inputHsmsHswhDetailPage("rptc自动化测试-函数描述")
        self.inputResTypeHswhDetailPage(self.RES_ZS)
        self.inputSqlHswhDetailPage("select @1 from dual")
        # 7、点击解析参数，并输入参数名称、类型、参数值
        self.clickAnalParamHswhDetailPage()
        self.makeParamsInfoHswhDetailPage("rptc自动化测试参数", self.PARAMS_TEXT, "1")
        # 8、点击测试,并断言测试sql成功,退出测试界面
        self.clickTestHswhDetailPage()
        res = self.GetTagText(self.MSG_DETAIL_HSWH)
        self.assertEqual(res, "SQL预执行成功，语法正确！")
        self.closeAlertTestHswhDetailPage()
        self.closeTestHswhDetailPage()
        # 9、切换到详情frame，点击保存，并断言保存成功
        self.switchToDetailFrame()
        self.clickSaveHswhDetailPage()
        res1 = self.GetTagText(self.MSG_DETAIL_HSWH)
        self.assertEqual(res1, "保存成功")
        self.closeHswhAlert()
        self.closeHswhDetailMainPage()
        mylog.info('\n************案例：【{}】执行结束************'.format(sys._getframe().f_code.co_name))

    def test_14_rptc_sjxwh_add_data_success(self):
        """综合报表数据项维护维护--新增数据项成功"""
        mylog.info('\n************开始执行案例：【{}】************'.format(sys._getframe().f_code.co_name))
        # 1、登录(已在Init类中进行了登录，无需在案例中再次进行登录)
        # 2、进入报送管理主界面
        self.intoBsglMainMenu()
        self.switchToBsglBaseFrame()
        # 3、选择人行报表品种进入rptc管理界面
        self.intoRptcTab()
        # 4、切换到品种管理frame
        self.switchBspzFrame()
        # 5、进入数据项维护页面，点击新增按钮
        self.swithToSjxwh()
        self.switchBspzFrame()
        self.clickSjxwhAddButton()
        # 6、输入数据项基本信息
        sjx_name = "rptc自动化数据项名称" + get_now_time_to_str()
        self.inputSjxwhInfo(sjx_name, "rptc自动化数据项描述", self.GROUP_RPTC_SEASON, "G3301-银行账簿利率风险计量报表(标准化计量框架简化版)")
        # 7、添加函数并插入
        self.choiceSjxwhFuncDataAndInster("3")
        # 8、添加数据项并插入
        self.choiceSjxwhItemsDataAndInster("LRB01.资产处置损益_本月数")
        # 9、保存
        self.clickSjxwhSaveButton()
        res2 = self.GetTagText(self.MSG_FUNC_FORM_SJXWH)
        self.assertEqual(res2, "保存成功！")
        mylog.info('\n************案例：【{}】执行结束************'.format(sys._getframe().f_code.co_name))

    def test_15_rptc_set_zdysjlx_success(self):
        """设置rptc-自定义数据类型"""
        mylog.info('\n************开始执行案例：【{}】************'.format(sys._getframe().f_code.co_name))
        # 1、登录(已在Init类中进行了登录，无需在案例中再次进行登录)
        # 2、进入报送管理主界面
        self.intoBsglMainMenu()
        self.switchToBsglBaseFrame()
        # 3、选择综合报表品种进入rptc管理界面
        self.intoRptcTab()
        # 4、切换到品种管理frame
        self.switchBspzFrame()
        # 5、进入自定义数据类型页签
        self.swithToZdysjlx()
        self.ZdysjlxFrame()
        # 新增数据类型-编辑数据类型-新增数据类型明细-编辑数据类型明细-删除数据类型失败（该自定义类型已被引用，不可删除！）--删除数据类型明细后（删除成功！）--删除数据类型成功（删除成功！）
        # 6、数据类型-新增按钮
        self.addSjlxButton()
        # 7、数据类型-新增-编号
        bh = "zdy" + get_now_time_to_str()
        self.addSjlxBh(bh)
        # 8、数据类型-新增-名称
        base_name = "rptc自定义" + get_now_time_to_str()
        add_name = base_name + "-新增"
        edit_name = base_name + "-编辑"
        self.addSjlxName(add_name)
        # 9、数据类型-新增-说明
        self.addSjlxSm(add_name + "说明")
        # 10、数据类型-新增-保存按钮
        self.addSjlxSave()
        # 11、切换frame
        self.QuiteFrame()
        self.switchToBsglBaseFrame()
        self.switchBspzFrame()
        self.ZdysjlxFrame()
        # 12、数据类型-选择点击数据行
        self.choiceSjlxClick(bh)
        # 13、数据类型-编辑按钮
        self.editSjlxButton()
        # 14、数据类型-编辑-名称
        self.editSjlxName(edit_name)
        # 15、数据类型-编辑-说明
        self.editSjlxSm(edit_name + "说明")
        # 16、数据类型-编辑-保存按钮
        self.editSjlxSave()
        # 17、切换frame
        self.QuiteFrame()
        self.switchToBsglBaseFrame()
        self.switchBspzFrame()
        self.ZdysjlxFrame()
        # 18、数据类型-选择点击数据行
        self.choiceSjlxClick(bh)
        # 19、数据类型明细-新增按钮
        self.addSjlxMxButton()
        # 20、数据类型明细-新增-名称
        self.addSjlxMxName("数据类型明细-新增名称")
        # 21、数据类型明细-新增-参数值
        self.addSjlxMxCsz("数据类型明细-新增参数值")
        # 22、数据类型明细-新增-保存按钮
        self.addSjlxMxSave()
        # 23、切换frame
        self.QuiteFrame()
        self.switchToBsglBaseFrame()
        self.switchBspzFrame()
        self.ZdysjlxFrame()
        # 24、数据类型明细-勾选第一行
        self.SelectSjlxMxFrist()
        # 25、数据类型明细-编辑按钮
        self.editSjlxMxButton()
        # 26、数据类型-编辑-名称
        self.editSjlxMxName("数据类型明细-编辑名称")
        # 27、数据类型-编辑-说明
        self.editSjlxMxCsz("数据类型明细-编辑参数值")
        # 28、数据类型-编辑-保存按钮
        self.editSjlxMxSave()
        # 29、切换frame
        self.QuiteFrame()
        self.switchToBsglBaseFrame()
        self.switchBspzFrame()
        self.ZdysjlxFrame()
        # 30、数据类型-删除按钮
        self.delSjlxButton()
        # 31、断言 -数据类型-删除按钮-删除失败-该自定义类型已被引用，不可删除！
        res = self.GetTagText(self.MSG_SJLX_RESULT_SUCCESS)
        self.assertEqual(res, '该自定义类型已被引用，不可删除！')
        # 32、数据类型--删除失败--确定
        self.delSjlxFail()
        # 33、数据类型明细复选框全选
        self.SelectSjlxMxAll()
        # 34、数据类型明细-删除按钮
        self.delSjlxMxButton()
        # 35、断言 -数据类型明细-删除按钮-删除成功
        res = self.GetTagText(self.MSG_SJLXMX_RESULT_SUCCESS)
        self.assertEqual(res, '删除成功！')
        # 36、关闭删除成功弹窗
        self.delSjlxMxSuccessClose()
        # 37、数据类型-删除按钮
        self.delSjlxButton()
        # 38、断言 -数据类型-删除按钮-删除成功
        res = self.GetTagText(self.MSG_SJLX_RESULT_SUCCESS)
        self.assertEqual(res, '删除成功！')
        # 39、关闭删除成功弹窗
        self.delSjlxSuccessClose()
        mylog.info('\n************案例：【{}】执行结束************'.format(sys._getframe().f_code.co_name))
